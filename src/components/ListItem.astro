---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { EventRelatedPostTypes } from 'src/content.config';

const featuredImageDefault = '/src/assets/images/featured-image/default.svg';
const { item } = Astro.props;

const featuredImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/featured-image/*.{jpg,png,svg,webp}'
);

const featuredImageFn =
  featuredImages?.[
    '/src/assets/images/featured-image/' + item.data.featuredImage
  ] ?? featuredImages[featuredImageDefault];

const getUrl = (item: any): typeof item | string => {
  const type = item.data?.type;

  let filePath = item.filePath;

  if (
    !item.filePath.includes('#') &&
    Object.keys(EventRelatedPostTypes).includes(type)
  ) {
    filePath = item.filePath.replace('/' + type, '') + '#' + type;
  }

  let segments = filePath
    .replace('src/data/', '')
    .replace('children', '')
    .replace('index.md', '')
    .replace('.md', '')
    .split('/')
    .filter((x: string) => x);

  if (segments[segments.length - 1].includes('#')) {
    return [segments[0], segments[2], segments[segments.length - 1]]
      .join('/')
      .replace('/#', '#');
  }

  return [segments[0], segments[1], segments[2]].join('/');
};
---

<div
  class="bg-white flex flex-col gap-4 justify-start prose-default p-6 border-b border-b-gray-300"
>
  <div class="flex items-start gap-6 lg:gap-8">
    <a href={getUrl(item)} class="w-1/3 rounded-sm">
      <Image
        src={featuredImageFn()}
        alt={item.data.title}
        class="block w-full h-auto !m-0"
      />
    </a>

    <div class="flex flex-col items-start gap-6">
      <h2 class="!m-0 !mt-2 lg:!text-2xl">
        <a href={getUrl(item)} class="!no-underline !text-secondary-700">
          {item.data.title}
        </a>
      </h2>

      <p class="!m-0 !-mt-4 text-xs text-gray-500">
        {new Date(item.data.pubDate).toLocaleDateString('hu-HU')}
      </p>

      <p class="!m-0">{item.data.excerpt}</p>

      <a href={getUrl(item)} class="button">Tov√°bb</a>
    </div>
  </div>
</div>
